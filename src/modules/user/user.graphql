scalar Date

type Query {
    getUsers : [User]
    getUserById: User
}

type Mutation{
    updateUser(id:ID, user: UserData): User
    deleteUser(id:ID): User


    login(input: LoginData): AuthPayload
    register(input: RegisterData): User

}

type AuthPayload {
    access_token: String!
    user: User!
}

input LoginData {
    email: String!
    password: String!
}

input RegisterData {
    email: String!
    password: String!
    firstName: String!
    lastName: String!
}


type User {
    id: ID!
    name: String!
    email: String!
    password: String!
    lastName: String!
    firstName: String!
    image: String!
    address: String!
    Cart: Cart !
}

type Cart {
    id: ID!
}

input UserData {
    email: String!
    password: String!
    lastName: String!
    firstName: String!
}
